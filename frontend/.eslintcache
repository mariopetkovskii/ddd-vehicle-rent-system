[{"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\index.js":"1","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\App\\App.js":"3","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Vehicle\\vehicles.js":"4","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Auth\\Login.js":"5","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Auth\\Register.js":"6","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Header\\Header.js":"7","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\service\\VehicleService\\VehicleService.js":"8","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\service\\UserService\\userService.js":"9","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Vehicle\\vehicleAddModal.js":"10","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\repository\\VehicleRepository\\VehicleRepository.js":"11","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\repository\\UserRepository\\UserRepository.js":"12","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\axios\\axios_vehicle.js":"13","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\axios\\axios_users.js":"14","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\service\\RentService\\rentService.js":"15","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\repository\\RentRepository\\RentRepository.js":"16","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\axios\\axios_rent.js":"17","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Account\\account.js":"18","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Account\\add-money.js":"19","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Vehicle\\rentVehicleModal.js":"20","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Account\\rented-vehicles.js":"21"},{"size":714,"mtime":1662682571890,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1662681601224,"results":"24","hashOfConfig":"23"},{"size":4446,"mtime":1663173446590,"results":"25","hashOfConfig":"23"},{"size":6068,"mtime":1663158780197,"results":"26","hashOfConfig":"23"},{"size":2210,"mtime":1662824260272,"results":"27","hashOfConfig":"23"},{"size":4096,"mtime":1662824075075,"results":"28","hashOfConfig":"23"},{"size":4680,"mtime":1663156892618,"results":"29","hashOfConfig":"23"},{"size":383,"mtime":1663173446602,"results":"30","hashOfConfig":"23"},{"size":893,"mtime":1663117211868,"results":"31","hashOfConfig":"23"},{"size":5030,"mtime":1663173446579,"results":"32","hashOfConfig":"23"},{"size":631,"mtime":1663173446566,"results":"33","hashOfConfig":"23"},{"size":1679,"mtime":1663175536613,"results":"34","hashOfConfig":"23"},{"size":204,"mtime":1662682486539,"results":"35","hashOfConfig":"23"},{"size":204,"mtime":1663021182949,"results":"36","hashOfConfig":"23"},{"size":245,"mtime":1663110901936,"results":"37","hashOfConfig":"23"},{"size":550,"mtime":1663175586879,"results":"38","hashOfConfig":"23"},{"size":204,"mtime":1663021242816,"results":"39","hashOfConfig":"23"},{"size":1493,"mtime":1663156904462,"results":"40","hashOfConfig":"23"},{"size":1667,"mtime":1663026665385,"results":"41","hashOfConfig":"23"},{"size":3989,"mtime":1663174940216,"results":"42","hashOfConfig":"23"},{"size":1348,"mtime":1663117583187,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dx9spd",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\index.js",[],["94","95"],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\App\\App.js",["96"],"import './App.css';\nimport {Component} from \"react\";\nimport Header from \"../Header/Header\";\nimport vehicleService from \"../../service/VehicleService/VehicleService\";\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport Vehicle from \"../Vehicle/vehicles\";\nimport Registration from \"../Auth/Register\";\nimport userService from \"../../service/UserService/userService\";\nimport Login from \"../Auth/Login\";\nimport rentService from \"../../service/RentService/rentService\";\nimport Account from \"../Account/account\";\nimport AddMoney from \"../Account/add-money\";\nimport RentedVehicles from \"../Account/rented-vehicles\";\nimport jwt_decode from \"jwt-decode\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            vehicles: [],\n            isUserLoggedIn: userService.checkIfUserLoggedIn(),\n            userDetails: [],\n            rentedVehicles: []\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Header isUserLoggedIn={this.state.isUserLoggedIn}\n                        logout={this.logout}\n                        userDetails={this.state.userDetails}\n                />\n                <div className={\"container\"}>\n                    <Routes>\n                        <Route path={\"/vehicles\"} exact element={<Vehicle onAddVehicle={this.addVehicle}\n                                                                          onRent={this.rentVehicle}\n                                                                          userDetails={this.state.userDetails}\n                                                                          isLoggedIn={this.state.isUserLoggedIn}/>}/>\n                        <Route path={\"/register\"} exact element={<Registration onRegister={this.register}/>}/>\n                        <Route path={\"/login\"} exact element={<Login onLogin={this.login}/>}/>\n                        <Route path={\"/account\"} exact element={<Account userDetails={this.state.userDetails}/>}/>\n                        <Route path={\"/add-money\"} exact element={<AddMoney onAddMoney={this.addMoney}/>}/>\n                        <Route path={\"/rented-vehicles\"} exact element={<RentedVehicles rentedVehicles={this.state.rentedVehicles}\n                                                                                        onLoad={this.getAllRentedUserVehicles}/>}/>\n                    </Routes>\n                </div>\n            </div>\n        )\n    }\n\n    listVehicles = () => {\n        vehicleService.listAll()\n            .then((data) => {\n                this.setState({\n                    vehicles: data.data\n                })\n            });\n    }\n\n    addVehicle = (name, brand, price, type, numOfRents) => {\n        vehicleService.addVehicle(name, brand, price, type, numOfRents)\n            .then(() => {\n                window.location.href = \"/vehicles\"\n            })\n    }\n\n    register = (firstName, lastName, email, password, confirmPassword) => {\n        userService.register(firstName, lastName, email, password, confirmPassword)\n            .then(() => {\n                window.location.href = \"/login\"\n            })\n    }\n\n    login = (email, password) => {\n        userService.login(email, password)\n            .then(() => {\n                window.location.href = \"/vehicles\"\n            })\n    }\n\n    logout = () => {\n        userService.logout()\n        window.location.href = \"/login\"\n    }\n\n    rentVehicle = (vehicleId, days) => {\n        // console.log(vehicleId.id)\n\n        rentService.rentVehicle(vehicleId, days)\n            .then(() => {\n                window.location.href = \"/vehicles\"\n            })\n    }\n\n    userDetails = () => {\n        userService.userDetails()\n            .then((data) => {\n                this.setState({\n                    userDetails: data.data\n                })\n            });\n    }\n\n    addMoney = (amount) => {\n        userService.addMoney(amount)\n            .then(() => {\n                window.location.href = \"/account\"\n            })\n    }\n\n    getAllRentedUserVehicles = () => {\n        userService.getAllRentedVehicles(jwt_decode(localStorage.getItem('auth_token')).id).then((data) => {\n            this.setState({\n                rentedVehicles: data.data\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.userDetails()\n        if(userService.checkIfUserLoggedIn())\n            this.getAllRentedUserVehicles()\n    }\n\n\n}\n\nexport default App;\n","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Vehicle\\vehicles.js",["97","98","99","100","101"],"import * as React from 'react';\r\nimport {useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport VehicleAddModal from \"./vehicleAddModal\";\r\nimport RentVehicleModal from \"./rentVehicleModal\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst Vehicle = (props) => {\r\n\r\n    const [openModal, setOpenedModal] = useState(null);\r\n    const [openModalRent, setOpenedModalRent] = useState(null);\r\n    const [modalIsOpenAddVehicle, setIsOpen] = React.useState(false);\r\n    const [modalIsOpenRent, setIsOpenRent] = React.useState(false);\r\n    const [selectedRow, setSelectedRow] = useState(null);\r\n    const [errorMessage, updateErrorMessage] = React.useState()\r\n    let addVehicle;\r\n\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    if (token !== null) {\r\n        const decoded_token = jwt_decode(token);\r\n        if (decoded_token.authority.includes('ROLE_ADMIN')) {\r\n            addVehicle = <div className=\"justify-content-end d-flex\">\r\n                <button className={\"btn btn-dark mt-2\"}\r\n                        onClick={(openModal) => openModalAddVehicle(openModal)}>Add\r\n                    Vehicle\r\n                </button>\r\n            </div>\r\n        }\r\n    }\r\n    const history = useNavigate();\r\n\r\n\r\n    function openModalAddVehicle(addVehicleModal) {\r\n        setOpenedModal(addVehicleModal)\r\n        setIsOpen(true)\r\n    }\r\n\r\n    function openModalVehicleRent(addVehicleModal) {\r\n        setOpenedModalRent(addVehicleModal)\r\n        setIsOpenRent(true)\r\n    }\r\n\r\n    function openFromParent(rowData) {\r\n        setSelectedRow(rowData)\r\n        setIsOpenRent(true);\r\n        // props.onRent(rowData.id)\r\n        console.log(rowData.id)\r\n    }\r\n\r\n    function handleCloseModalAddVehicle() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    function handleCloseModalRent() {\r\n        setIsOpenRent(false);\r\n    }\r\n\r\n    function handleAfterOpenAddVehicle(event, data) {\r\n    }\r\n\r\n    function handleAfterOpenRent(event, data) {\r\n    }\r\n\r\n    const columns = [\r\n        {title: 'Name', field: 'name.name'},\r\n        {title: 'Brand', field: 'brand.brand'},\r\n        {title: 'Price', field: 'price.amount'},\r\n        {title: 'Type', field: 'type'},\r\n        {title: 'Number of rents', field: 'numOfRents'},\r\n    ];\r\n\r\n    function isValidDate(d) {\r\n        return d instanceof Date && !isNaN(d);\r\n    }\r\n\r\n    // const addVehicle = (name, brand, price, type, numOfRents) => {\r\n    //     vehicleService.addVehicle(name, brand, price, type, numOfRents)\r\n    //         .then(() => {\r\n    //             window.location.href = \"/location\"\r\n    //         })\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <VehicleAddModal\r\n                dynData={openModal}\r\n                IsModalOpened={modalIsOpenAddVehicle}\r\n                onCloseModal={handleCloseModalAddVehicle}\r\n                onAfterOpen={handleAfterOpenAddVehicle}\r\n                onAddVehicle={props.onAddVehicle}\r\n                isLoggedIn={props.isLoggedIn}\r\n            />\r\n\r\n            <RentVehicleModal\r\n                dynData={selectedRow}\r\n                IsModalOpened={modalIsOpenRent}\r\n                onCloseModal={handleCloseModalRent}\r\n                onOpenModal={handleAfterOpenRent}\r\n                onRentVehicle={props.onRent}\r\n                userDetails={props.userDetails}\r\n            />\r\n\r\n\r\n            <div className=\"container\">\r\n                {addVehicle}\r\n                <div className=\"justify-content-center col-md-15 offset-sm-0 row-md-9 pt-2\">\r\n                    <MaterialTable\r\n                        style={{\r\n                            zIndex: 0,\r\n                        }}\r\n                        columns={columns}\r\n                        data={query =>\r\n                            new Promise((resolve) => {\r\n                                let fetchData = \"http://localhost:9090/rest/vehicle/pagination/\" + query.page + \"/\" + query.pageSize\r\n                                fetch(fetchData).then(response => response.json()).then(response => {\r\n                                    resolve({\r\n                                        data: response.content,\r\n                                        page: query.page,\r\n                                        totalCount: response.totalElements,\r\n                                    });\r\n                                })\r\n                            })\r\n                        }\r\n                        title={<h5><strong>Vehicles</strong></h5>}\r\n                        options={{\r\n                            actionsColumnIndex: -1,\r\n                            search: false,\r\n                            paging: true,\r\n                            draggable: false,\r\n                            sorting: false,\r\n                            loadingType: 'linear',\r\n                            // filtering: true,\r\n                            headerStyle: {\r\n                                fontWeight: \"bold\",\r\n                                maxWidth: \"7vh\",\r\n                                width: \"7vh\",\r\n                            },\r\n                            rowStyle: rowData => ({\r\n                                backgroundColor:\r\n                                    selectedRow === rowData.tableData.id ? '#67aeae' : '#FFF',\r\n                                maxHeight: \"11vh\",\r\n                                height: \"11vh\",\r\n                                maxWidth: \"7vh\",\r\n                                width: \"7vh\"\r\n                            })\r\n                        }}\r\n                        actions={[\r\n                            {\r\n                                icon: () => <button className={\"btn btn-warning\"}>Rent</button>,\r\n                                tooltip: 'Open Details',\r\n                                onClick: (event, rowData) => openFromParent(rowData)\r\n                            }]\r\n                        }\r\n\r\n                    />\r\n                </div>\r\n                {errorMessage}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Vehicle;","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Auth\\Login.js",["102"],"import React, {useState} from 'react';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const [formData, updateFormData] = React.useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value.trim()\r\n        })\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const email = formData.email;\r\n        const password = formData.password;\r\n        props.onLogin(email, password);\r\n    }\r\n\r\n    return (\r\n        <div className={\"row\"}>\r\n            <div className={\"col-md-6 offset-md-3\"}>\r\n                <div className=\"form\">\r\n                    <div className=\"form-body\">\r\n                        <form onSubmit={onFormSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       id=\"email\"\r\n                                       name=\"email\"\r\n                                       required\r\n                                       placeholder=\"Enter email\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\"\r\n                                       className=\"form-control\"\r\n                                       id=\"password\"\r\n                                       name=\"password\"\r\n                                       required\r\n                                       placeholder=\"Enter Password\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <br/>\r\n                            <button id=\"submit\" type=\"submit\" className=\"btn btn-outline-dark\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Auth\\Register.js",["103"],"import React, {useState} from 'react';\r\n\r\n\r\nfunction Registration(props) {\r\n\r\n    const [formData, updateFormData] = React.useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value.trim()\r\n        })\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const firstName = formData.firstName;\r\n        const lastName = formData.lastName;\r\n        const email = formData.email;\r\n        const password = formData.password;\r\n        const confirmPassword = formData.confirmPassword;\r\n        props.onRegister(firstName, lastName, email, password, confirmPassword);\r\n    }\r\n\r\n    return (\r\n        <div className={\"row\"}>\r\n            <div className={\"col-md-6 offset-md-3\"}>\r\n                <div className=\"form\">\r\n                    <div className=\"form-body\">\r\n                        <form onSubmit={onFormSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\">First name</label>\r\n                                <input type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       id=\"firstName\"\r\n                                       name=\"firstName\"\r\n                                       required\r\n                                       placeholder=\"Enter first name\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <input type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       id=\"lastName\"\r\n                                       name=\"lastName\"\r\n                                       required\r\n                                       placeholder=\"Enter brand\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       id=\"email\"\r\n                                       name=\"email\"\r\n                                       required\r\n                                       placeholder=\"Enter email\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\"\r\n                                       className=\"form-control\"\r\n                                       id=\"password\"\r\n                                       name=\"password\"\r\n                                       required\r\n                                       placeholder=\"Enter Password\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                <input type=\"password\"\r\n                                       className=\"form-control\"\r\n                                       id=\"confirmPassword\"\r\n                                       name=\"confirmPassword\"\r\n                                       required\r\n                                       placeholder=\"Confirm password\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <br/>\r\n                            <button id=\"submit\" type=\"submit\" className=\"btn btn-outline-dark\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Header\\Header.js",["104"],"const header = (props) => {\r\n    if (!props.isUserLoggedIn) {\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-warning\">\r\n                    <div className=\"container\">\r\n                        <a className=\"navbar-brand\" href=\"/\" style={{color: \"black\"}}>Vehicle rent system</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                                data-target=\"#navbarsExampleDefault\"\r\n                                aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarsExampleDefault\">\r\n                            <ul className=\"navbar-nav m-auto\">\r\n                                <li className=\"nav-item m-auto\">\r\n                                    <a href=\"/vehicles\" className=\"nav-link active\" style={{color: \"black\"}}>Home</a>\r\n                                </li>\r\n                                <li className=\"nav-item m-auto\">\r\n                                    <a href=\"/vehicles\" className=\"nav-link\" style={{color: \"black\"}}>Vehicles</a>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"nav navbar-nav navbar-right\">\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"/register\" className=\"nav-link\" style={{color: \"black\"}}>Register</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"/login\" className=\"nav-link\" style={{color: \"black\"}}>Login</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-warning\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"/\" style={{color: \"black\"}}>Vehicle rent system</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarsExampleDefault\"\r\n                            aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarsExampleDefault\">\r\n                        <ul className=\"navbar-nav m-auto\">\r\n                            <li className=\"nav-item m-auto\">\r\n                                <a href=\"/home\" className=\"nav-link active\" style={{color: \"black\"}}>Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item m-auto\">\r\n                                <a href=\"/vehicles\" className=\"nav-link\" style={{color: \"black\"}}>Vehicles</a>\r\n                            </li>\r\n                            <li className=\"nav-item m-auto\">\r\n                                <a href=\"/rented-vehicles\" className=\"nav-link\" style={{color: \"black\"}}>My vehicles</a>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"nav navbar-nav navbar-right\">\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"/add-money\" className=\"nav-link\" style={{color: \"black\"}}>${props.userDetails.money?.amount.toFixed(2)}</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"/account\" className=\"nav-link\" style={{color: \"black\"}}>\r\n                                    {props.userDetails.firstName +\r\n                                    ' '\r\n                                    + props.userDetails.lastName}</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"\" onClick={props.logout} className=\"nav-link\" style={{color: \"black\"}}>Logout</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n    }\r\n}\r\n\r\nexport default header;","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\service\\VehicleService\\VehicleService.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\service\\UserService\\userService.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Vehicle\\vehicleAddModal.js",["105","106"],"import Modal from 'react-modal';\r\nimport * as React from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        width: '80%',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        zIndex: 1300,\r\n\r\n    }\r\n};\r\n\r\nconst VehicleAddModal = (props) => {\r\n\r\n    function afterOpenModal(e) {\r\n        props.onAfterOpen(e, 'After Modal Opened');\r\n    }\r\n\r\n    function onModalClose(event) {\r\n        let data = {name: 'example', type: 'closed from child'};\r\n        props.onCloseModal(event, data);\r\n    }\r\n\r\n    const [formData, updateFormData] = React.useState({\r\n        name: \"\",\r\n        brand: \"\",\r\n        price: 0,\r\n        type: \"CAR\",\r\n        numOfRents: 0\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value.trim()\r\n        })\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const name = formData.name;\r\n        const brand = formData.brand;\r\n        const price = formData.price;\r\n        const type = formData.type;\r\n        const numOfRents = formData.numOfRents\r\n        props.onAddVehicle(name, brand, price, type, numOfRents);\r\n    }\r\n\r\n\r\n    return (\r\n        props.dynData ? <div>\r\n            <Modal\r\n                isOpen={props.IsModalOpened}\r\n                onAfterOpen={e => afterOpenModal(e)}\r\n                style={customStyles}\r\n                ariaHideApp={true}\r\n                scrollable={true}\r\n            >\r\n                <h2>Add Vehicle</h2>\r\n\r\n                <div className=\"form mw-50 p-3\">\r\n                    <div className=\"form-body\">\r\n                        <form onSubmit={onFormSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <input type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       id=\"name\"\r\n                                       name=\"name\"\r\n                                       required\r\n                                       placeholder=\"Enter name\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"brand\">Brand</label>\r\n                                <input type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       id=\"brand\"\r\n                                       name=\"brand\"\r\n                                       required\r\n                                       placeholder=\"Enter brand\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"price\">Price</label>\r\n                                <input type=\"number\"\r\n                                       className=\"form-control\"\r\n                                       id=\"price\"\r\n                                       name=\"price\"\r\n                                       required\r\n                                       placeholder=\"Enter brand\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"type\">Type</label>\r\n                                <input type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       id=\"type\"\r\n                                       name=\"type\"\r\n                                       required\r\n                                       placeholder=\"Enter type\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                                <label htmlFor=\"numOfRents\">Available</label>\r\n                                <input type=\"number\"\r\n                                       className=\"form-control\"\r\n                                       id=\"numOfRents\"\r\n                                       name=\"numOfRents\"\r\n                                       required\r\n                                       placeholder=\"Enter available vehicles\"\r\n                                       onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <br/>\r\n                            <button id=\"submit\" type=\"submit\" className=\"btn btn-outline-dark\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer pt-3\">\r\n                    <button className={\"btn btn-danger\"} onClick={e => onModalClose(e)}>Close</button>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div> : <div></div>\r\n    );\r\n}\r\n\r\nexport default VehicleAddModal;","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\repository\\VehicleRepository\\VehicleRepository.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\repository\\UserRepository\\UserRepository.js",["107"],"import axios_users from \"../../axios/axios_users\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios_rent from \"../../axios/axios_rent\";\r\n\r\nconst AUTH_TOKEN = 'auth_token';\r\nconst loggedInEmail = 'loggedEmail'\r\n\r\nconst userRepository = {\r\n\r\n    register: (firstName, lastName, email, password, confirmPassword) => {\r\n        return axios_users.post(\"/user/register\", {\r\n            \"firstName\": firstName,\r\n            \"lastName\": lastName,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"confirmPassword\": confirmPassword\r\n        })\r\n    },\r\n\r\n    login: (email, password) => {\r\n        return axios_users.post(\"/user/login\", {}, {\r\n            auth: {\r\n                username: email,\r\n                password: password\r\n            }\r\n        }).then(res => {\r\n            localStorage.setItem(AUTH_TOKEN, res.data)\r\n            localStorage.setItem(loggedInEmail, email)\r\n            return res;\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    },\r\n\r\n    logout: () => {\r\n        localStorage.removeItem(AUTH_TOKEN);\r\n        localStorage.removeItem(loggedInEmail);\r\n    },\r\n\r\n    userDetails: () => {\r\n        return axios_users.post(\"/user/details\", {\r\n            \"email\": localStorage.getItem(loggedInEmail)\r\n        })\r\n    },\r\n\r\n    addMoney: (amount) => {\r\n        return axios_users.post(\"/user/addMoney\", {\r\n            \"email\": localStorage.getItem(loggedInEmail),\r\n            \"amount\": amount\r\n        })\r\n    },\r\n\r\n    getAllRentedVehicles: (id) => {\r\n        return axios_rent.post(\"/rent/vehicle/getUserVehicles\", {\r\n            \"id\": id\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default userRepository;","C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\axios\\axios_vehicle.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\axios\\axios_users.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\service\\RentService\\rentService.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\repository\\RentRepository\\RentRepository.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\axios\\axios_rent.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Account\\account.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Account\\add-money.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Vehicle\\rentVehicleModal.js",[],"C:\\Users\\petko\\IdeaProjects\\ddd-vehicle-rent-system\\frontend\\src\\components\\Account\\rented-vehicles.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":5,"column":9,"nodeType":"114","messageId":"115","endLine":5,"endColumn":17},{"ruleId":"112","severity":1,"message":"116","line":13,"column":12,"nodeType":"114","messageId":"115","endLine":13,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":17,"column":26,"nodeType":"114","messageId":"115","endLine":17,"endColumn":44},{"ruleId":"112","severity":1,"message":"118","line":32,"column":11,"nodeType":"114","messageId":"115","endLine":32,"endColumn":18},{"ruleId":"112","severity":1,"message":"119","line":40,"column":14,"nodeType":"114","messageId":"115","endLine":40,"endColumn":34},{"ruleId":"112","severity":1,"message":"120","line":74,"column":14,"nodeType":"114","messageId":"115","endLine":74,"endColumn":25},{"ruleId":"112","severity":1,"message":"121","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"112","severity":1,"message":"121","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":74,"column":33,"nodeType":"124","endLine":74,"endColumn":113},{"ruleId":"112","severity":1,"message":"125","line":3,"column":9,"nodeType":"114","messageId":"115","endLine":3,"endColumn":20},{"ruleId":"112","severity":1,"message":"126","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":18},{"ruleId":"112","severity":1,"message":"126","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":18},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'openModalRent' is assigned a value but never used.","'updateErrorMessage' is assigned a value but never used.","'history' is assigned a value but never used.","'openModalVehicleRent' is defined but never used.","'isValidDate' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useNavigate' is defined but never used.","'jwt_decode' is defined but never used.","no-global-assign","no-unsafe-negation"]